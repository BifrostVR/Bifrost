import { DbValue } from "../Db";
export declare type WhereOperator = '<' | '<=' | '=' | '>=' | '>' | '!=' | 'LIKE' | 'IN';
export declare type WhereGroupOperator = 'AND' | 'OR';
export declare type WhereClause = [DbValue, WhereOperator, DbValue];
export declare type WhereStr = string;
export declare type WhereGroup = [WhereGroupOperator, Where[]];
export declare type Where = WhereStr | WhereClause | WhereGroup;
export declare class WhereResult {
    sql: string;
    params: Object;
}
export declare class WhereBuilder {
    _paramI: number;
    sql: string;
    params: {};
    constructor(where: Where);
    getResult(): WhereResult;
    parseWhere(where: Where): string;
    parseClause(clause: WhereClause): string;
    parseGroup(group: WhereGroup): string;
}
export declare function AND(...where: Where[]): WhereGroup;
export declare function OR(...where: Where[]): WhereGroup;
